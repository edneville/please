# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
before_script:
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends build-essential libpam0g-dev libpam0g

# Use cargo to test the project
test:cargo:
  script: |
    rustc --version && cargo --version  # Print version info for debugging
    cargo test --workspace --verbose
    install -oroot -groot -m4755 target/debug/please target/debug/pleaseedit /usr/bin 
    ls -al /usr/bin/please /usr/bin/pleaseedit
    sh bintest/make_user.sh
    set +e
    find bintest -type f -name test.sh | sort -rn | while IFS= read -r F; do
      echo "$F"
      D=`echo "$F" | sed -e 's_/test.sh__g'`
      /bin/rm -rf /etc/please.ini /etc/please.d
      /bin/cp -R ${D}/please* /etc
      sh "${F}" >/tmp/out 2>/tmp/err
      if test $? -ne 0; then
        echo "Failed:"
        cat /tmp/out /tmp/err
        exit 1
      fi
    done

